/**
 * Project Name:SOCO_IOT
 * File Name:HeartbeatService.java
 * Package Name:com.soco.car.iot.service.car
 * Date:2018年7月16日下午7:10:33
 * Copyright (c) 2018, sunlangping8888@163.com All Rights Reserved
 *
*/

package com.soco.car.iot.service.car;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.stereotype.Service;

import com.soco.car.iot.cache.entity.DeviceCache;
import com.soco.car.iot.constants.DeviceChannelContext;
import com.soco.car.iot.constants.SOCOIotConstant;
import com.soco.car.iot.server.car.message.BaseMsg;
import com.soco.car.iot.server.car.message.msg.HeartbeatMsg;
import com.soco.car.iot.service.AbstractBaseService;

import io.netty.channel.Channel;

/**
 * ClassName:HeartbeatService <br/>
 * Reason: KKS心跳包,目前无业务处理 <br/>
 * Date: 2018年7月16日 下午7:10:33 <br/>
 * 
 * @author sunlangping
 * @version
 * @see
 */
@Service
public class HeartbeatService extends AbstractBaseService {

	private final static Logger logger = LoggerFactory.getLogger(HeartbeatService.class);

	@Resource(name = "redisTemplate")
	private RedisTemplate<String, DeviceCache> deviceCacheTemplate;

	@Override
	public void processBusiness(Channel channel, BaseMsg baseMsg) {
		HeartbeatMsg heartbeatMsg = (HeartbeatMsg) baseMsg;
		String deviceNo = DeviceChannelContext.getAttrbute(channel);
		DeviceCache cache = (DeviceCache) deviceCacheTemplate.opsForHash().get(SOCOIotConstant.DEVICE_HASH, deviceNo);
		int gms = heartbeatMsg.getGsm();
		int voltage = heartbeatMsg.getVoltageLevel();
		cache.setGsm(gms);
		cache.setVoltage(voltage);
		deviceCacheTemplate.opsForHash().put(SOCOIotConstant.DEVICE_HASH, deviceNo, cache);
	}

}
