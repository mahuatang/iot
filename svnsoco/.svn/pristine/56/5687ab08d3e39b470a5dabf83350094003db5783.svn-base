/**
 * Project Name:SOCO_APP
 * File Name:LangugeHandle.java
 * Package Name:com.soco.car.app.controller
 * Date:2018年7月23日上午11:34:33
 * Copyright (c) 2018, sunlangping8888@163.com All Rights Reserved
 *
*/

package com.soco.car.app.handler;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.MethodParameter;
import org.springframework.http.MediaType;
import org.springframework.http.server.ServerHttpRequest;
import org.springframework.http.server.ServerHttpResponse;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice;

import com.soco.car.app.api.response.BaseResponse;
import com.soco.car.app.service.I18nService;

/**
 * ClassName:LangugeHandle <br/>
 * Reason: 语言返回值拦截器. <br/>
 * Date: 2018年7月23日 上午11:34:33 <br/>
 * 
 * @author sunlangping
 * @version
 * @see
 */
@ControllerAdvice
public class LangugeHandler implements ResponseBodyAdvice<Object> {
 
	private final static Logger logger = LoggerFactory.getLogger(LangugeHandler.class);

	@Autowired
	private I18nService i18n;

	/**
	 * 返回之前业务逻辑处理 TODO 简单描述该方法的实现功能（可选）.
	 * 
	 * @see org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice#beforeBodyWrite(java.lang.Object,
	 *      org.springframework.core.MethodParameter,
	 *      org.springframework.http.MediaType, java.lang.Class,
	 *      org.springframework.http.server.ServerHttpRequest,
	 *      org.springframework.http.server.ServerHttpResponse)
	 */
	@Override
	public Object beforeBodyWrite(Object response, MethodParameter methodParameter, MediaType mediaType, Class Classz,
			ServerHttpRequest httpRequest, ServerHttpResponse httpResponse) {
		if (response instanceof BaseResponse) {
			BaseResponse baseResponse = (BaseResponse) response;
			if (logger.isDebugEnabled()) {
				logger.debug("response:{}", baseResponse);
			}
			if (baseResponse != null) {
				//将错误代码转换成国际化消息内容处理
				baseResponse.setMessage(i18n.getMessage(baseResponse.getMessage()));
			}
			return baseResponse;
		}
		return response;
	}

	/**
	 * 判断拦截哪些
	 * 
	 * @see org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice#supports(org.springframework.core.MethodParameter,
	 *      java.lang.Class)
	 */
	@Override
	public boolean supports(MethodParameter methodParameter, Class classz) {
		return true;
	}
	
	

}
