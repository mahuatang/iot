/**
 * Project Name:SOCO_APP
 * File Name:UserService.java
 * Package Name:com.soco.car.app.service
 * Date:2018年7月24日下午1:25:50
 * Copyright (c) 2018, sunlangping8888@163.com All Rights Reserved
 *
*/

package com.soco.car.app.service;

import java.util.Date;
import java.util.Map;

import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.alibaba.dubbo.config.annotation.Reference;
import com.soco.car.app.api.request.LoginRequest;
import com.soco.car.app.api.request.RegisterRequest;
import com.soco.car.app.api.response.BaseResponse;
import com.soco.car.app.cache.TokenCache;
import com.soco.car.app.constants.ResponseMessageEnum;
import com.soco.car.app.constants.SOCOAppConstant;
import com.soco.car.app.handler.BaseResponseGenerator;
import com.soco.car.user.api.UserApi;
import com.soco.car.user.entity.User;

/**
 * ClassName:UserService <br/>
 * Reason: 用户相关服务. <br/>
 * Date: 2018年7月24日 下午1:25:50 <br/>
 * 
 * @author sunlangping
 * @version
 * @see
 */
@Service
public class UserService {

	@Reference
	private UserApi userApi;

	@Autowired
	private JwtService jwtService;

	@Autowired
	private TokenCache tokenCache;

	/**
	 * 
	 * register:注册
	 *
	 * @author sunlangping
	 * @param registerRequest
	 * @return
	 */
	public BaseResponse register(RegisterRequest registerRequest) {
		User u = userApi.findByPhone(registerRequest.getPhone());
		if (u != null) {
			return BaseResponseGenerator.genErrorResult(SOCOAppConstant.ERROR_CODE_400,
					ResponseMessageEnum.register_account_exist.getValue());
		}
		User user=new User();
		user.setUsername(registerRequest.getPhone());
		user.setPhone(registerRequest.getPhone());
		user.setRgstime(new Date());
		userApi.save(user);
		return BaseResponseGenerator.genSuccessResult(u);
	}

	/**
	 * 
	 * vaildataCode:判断验证码是否有效
	 *
	 * @author sunlangping
	 * @param phone
	 * @param code
	 * @return
	 */
	private boolean vaildataCode(String phone, String code) {
		boolean flag = false;

		return flag;
	}

	/**
	 * 
	 * login:登录
	 *
	 * @author sunlangping
	 * @param loginRequest
	 * @return
	 */
	public BaseResponse login(LoginRequest loginRequest) {
		User u = userApi.findByPhone(loginRequest.getPhone());
		if (u == null) {
			return BaseResponseGenerator.genErrorResult(SOCOAppConstant.ERROR_CODE_400,
					ResponseMessageEnum.register_account_failure.getValue());
		}

		String md5Pwd = DigestUtils.md5Hex(loginRequest.getPassword());
		if (!StringUtils.equals(md5Pwd, u.getPassword())) {
			return BaseResponseGenerator.genErrorResult(SOCOAppConstant.ERROR_CODE_400,
					ResponseMessageEnum.register_account_failure.getValue());
		}
		String token = jwtService.generateToken(loginRequest, u);
		return BaseResponseGenerator.genSuccessResult(token);
	}

	/**
	 * 
	 * refresh:刷新token
	 *
	 * @author sunlangping
	 * @param token
	 * @return
	 */
	public BaseResponse refresh(String token) {
		Map<String, Object> tokenMap = jwtService.validateToken(token);
		LoginRequest loginRequest = new LoginRequest();
		loginRequest.setPhone(tokenMap.get("phone") + "");
		loginRequest.setPassword(tokenMap.get("password") + "");
		String newToken = jwtService.generateToken(loginRequest, null);
		return BaseResponseGenerator.genSuccessResult(newToken);
	}

	public BaseResponse loginout(String token) {
		Map<String, Object> tokenMap = jwtService.validateToken(token);
		String phone = tokenMap.get("phone") + "";
		tokenCache.remove(phone);
		return BaseResponseGenerator.genSuccessResult(null);
	}
	/**
	 * 
	 * retrievePassword: 找密码短信
	 *
	 * @author sunlangping
	 * @param user
	 * @return
	 */
	// public BaseResponse retrievePasswordCode(User user) {
	// String phone = user.getPhone();
	// sendCode(phone, AliSmsTemplateEnum.retrieve_password.getValue(), true);
	// return BaseResponseGenerator.genSuccessResult(null);
	// }

	/**
	 * 
	 * sendCode:发送验证码
	 *
	 * @author sunlangping
	 * @param phone
	 * @param smsTemplate
	 * @param isVaildata
	 * @return
	 */
	// public BaseResponse sendCode(String phone, String smsTemplate, boolean
	// isVaildata) {
	// if (isVaildata) {
	// User user = userApi.findByPhone(phone);
	// if (user == null) {
	// return BaseResponseGenerator.genErrorResult(SOCOAppConstant.ERROR_CODE_200,
	// ResponseMessageEnum.register_account_exist.getValue());
	// }
	// }
	//
	// return null;
	// }
}