<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soco.car.user.dao.PhoneVersionMapper">
  <resultMap id="BaseResultMap" type="com.soco.car.user.entity.PhoneVersion">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="phoneToken" jdbcType="VARCHAR" property="phoneToken" />
    <result column="phoneType" jdbcType="VARCHAR" property="phoneType" />
    <result column="systemName" jdbcType="VARCHAR" property="systemName" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="versionName" jdbcType="VARCHAR" property="versionName" />
    <result column="versionNo" jdbcType="VARCHAR" property="versionNo" />
    <result column="useTime" jdbcType="TIMESTAMP" property="useTime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, phoneToken, phoneType, systemName, version, versionName, versionNo, useTime, 
    createTime, updateTime
  </sql>
  <select id="selectByExample" parameterType="com.soco.car.user.entity.PhoneVersionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ts01_phone_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts01_phone_version
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ts01_phone_version
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.soco.car.user.entity.PhoneVersionExample">
    delete from ts01_phone_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.soco.car.user.entity.PhoneVersion">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ts01_phone_version (userId, phoneToken, phoneType, 
      systemName, version, versionName, 
      versionNo, useTime, createTime, 
      updateTime)
    values (#{userId,jdbcType=BIGINT}, #{phoneToken,jdbcType=VARCHAR}, #{phoneType,jdbcType=VARCHAR}, 
      #{systemName,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{versionName,jdbcType=VARCHAR}, 
      #{versionNo,jdbcType=VARCHAR}, #{useTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.soco.car.user.entity.PhoneVersion">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ts01_phone_version
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        userId,
      </if>
      <if test="phoneToken != null">
        phoneToken,
      </if>
      <if test="phoneType != null">
        phoneType,
      </if>
      <if test="systemName != null">
        systemName,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="versionName != null">
        versionName,
      </if>
      <if test="versionNo != null">
        versionNo,
      </if>
      <if test="useTime != null">
        useTime,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="phoneToken != null">
        #{phoneToken,jdbcType=VARCHAR},
      </if>
      <if test="phoneType != null">
        #{phoneType,jdbcType=VARCHAR},
      </if>
      <if test="systemName != null">
        #{systemName,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="versionName != null">
        #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="versionNo != null">
        #{versionNo,jdbcType=VARCHAR},
      </if>
      <if test="useTime != null">
        #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.soco.car.user.entity.PhoneVersionExample" resultType="java.lang.Long">
    select count(*) from ts01_phone_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ts01_phone_version
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.phoneToken != null">
        phoneToken = #{record.phoneToken,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneType != null">
        phoneType = #{record.phoneType,jdbcType=VARCHAR},
      </if>
      <if test="record.systemName != null">
        systemName = #{record.systemName,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.versionName != null">
        versionName = #{record.versionName,jdbcType=VARCHAR},
      </if>
      <if test="record.versionNo != null">
        versionNo = #{record.versionNo,jdbcType=VARCHAR},
      </if>
      <if test="record.useTime != null">
        useTime = #{record.useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ts01_phone_version
    set id = #{record.id,jdbcType=BIGINT},
      userId = #{record.userId,jdbcType=BIGINT},
      phoneToken = #{record.phoneToken,jdbcType=VARCHAR},
      phoneType = #{record.phoneType,jdbcType=VARCHAR},
      systemName = #{record.systemName,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      versionName = #{record.versionName,jdbcType=VARCHAR},
      versionNo = #{record.versionNo,jdbcType=VARCHAR},
      useTime = #{record.useTime,jdbcType=TIMESTAMP},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.soco.car.user.entity.PhoneVersion">
    update ts01_phone_version
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="phoneToken != null">
        phoneToken = #{phoneToken,jdbcType=VARCHAR},
      </if>
      <if test="phoneType != null">
        phoneType = #{phoneType,jdbcType=VARCHAR},
      </if>
      <if test="systemName != null">
        systemName = #{systemName,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="versionName != null">
        versionName = #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="versionNo != null">
        versionNo = #{versionNo,jdbcType=VARCHAR},
      </if>
      <if test="useTime != null">
        useTime = #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.soco.car.user.entity.PhoneVersion">
    update ts01_phone_version
    set userId = #{userId,jdbcType=BIGINT},
      phoneToken = #{phoneToken,jdbcType=VARCHAR},
      phoneType = #{phoneType,jdbcType=VARCHAR},
      systemName = #{systemName,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      versionName = #{versionName,jdbcType=VARCHAR},
      versionNo = #{versionNo,jdbcType=VARCHAR},
      useTime = #{useTime,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>