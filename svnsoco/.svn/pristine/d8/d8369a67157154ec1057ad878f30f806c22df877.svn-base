<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soco.car.user.dao.PhoneVersionMapper">
  <resultMap id="BaseResultMap" type="com.soco.car.user.entity.PhoneVersion">
    <id column="phone_version_id" jdbcType="BIGINT" property="phoneVersionId" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="phoneToken" jdbcType="VARCHAR" property="phonetoken" />
    <result column="phoneType" jdbcType="VARCHAR" property="phonetype" />
    <result column="systemName" jdbcType="VARCHAR" property="systemname" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="versionName" jdbcType="VARCHAR" property="versionname" />
    <result column="versionNo" jdbcType="VARCHAR" property="versionno" />
    <result column="useTime" jdbcType="TIMESTAMP" property="usetime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    phone_version_id, userId, phoneToken, phoneType, systemName, version, versionName, 
    versionNo, useTime, createTime, updateTime
  </sql>
  <select id="selectByExample" parameterType="com.soco.car.user.entity.PhoneVersionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ts01_phone_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts01_phone_version
    where phone_version_id = #{phoneVersionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ts01_phone_version
    where phone_version_id = #{phoneVersionId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.soco.car.user.entity.PhoneVersionExample">
    delete from ts01_phone_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.soco.car.user.entity.PhoneVersion">
    <selectKey keyProperty="phoneVersionId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ts01_phone_version (userId, phoneToken, phoneType, 
      systemName, version, versionName, 
      versionNo, useTime, createTime, 
      updateTime)
    values (#{userid,jdbcType=BIGINT}, #{phonetoken,jdbcType=VARCHAR}, #{phonetype,jdbcType=VARCHAR}, 
      #{systemname,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{versionname,jdbcType=VARCHAR}, 
      #{versionno,jdbcType=VARCHAR}, #{usetime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.soco.car.user.entity.PhoneVersion">
    <selectKey keyProperty="phoneVersionId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ts01_phone_version
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="phonetoken != null">
        phoneToken,
      </if>
      <if test="phonetype != null">
        phoneType,
      </if>
      <if test="systemname != null">
        systemName,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="versionname != null">
        versionName,
      </if>
      <if test="versionno != null">
        versionNo,
      </if>
      <if test="usetime != null">
        useTime,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="phonetoken != null">
        #{phonetoken,jdbcType=VARCHAR},
      </if>
      <if test="phonetype != null">
        #{phonetype,jdbcType=VARCHAR},
      </if>
      <if test="systemname != null">
        #{systemname,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="versionname != null">
        #{versionname,jdbcType=VARCHAR},
      </if>
      <if test="versionno != null">
        #{versionno,jdbcType=VARCHAR},
      </if>
      <if test="usetime != null">
        #{usetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.soco.car.user.entity.PhoneVersionExample" resultType="java.lang.Long">
    select count(*) from ts01_phone_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ts01_phone_version
    <set>
      <if test="record.phoneVersionId != null">
        phone_version_id = #{record.phoneVersionId,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.phonetoken != null">
        phoneToken = #{record.phonetoken,jdbcType=VARCHAR},
      </if>
      <if test="record.phonetype != null">
        phoneType = #{record.phonetype,jdbcType=VARCHAR},
      </if>
      <if test="record.systemname != null">
        systemName = #{record.systemname,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.versionname != null">
        versionName = #{record.versionname,jdbcType=VARCHAR},
      </if>
      <if test="record.versionno != null">
        versionNo = #{record.versionno,jdbcType=VARCHAR},
      </if>
      <if test="record.usetime != null">
        useTime = #{record.usetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ts01_phone_version
    set phone_version_id = #{record.phoneVersionId,jdbcType=BIGINT},
      userId = #{record.userid,jdbcType=BIGINT},
      phoneToken = #{record.phonetoken,jdbcType=VARCHAR},
      phoneType = #{record.phonetype,jdbcType=VARCHAR},
      systemName = #{record.systemname,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      versionName = #{record.versionname,jdbcType=VARCHAR},
      versionNo = #{record.versionno,jdbcType=VARCHAR},
      useTime = #{record.usetime,jdbcType=TIMESTAMP},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.soco.car.user.entity.PhoneVersion">
    update ts01_phone_version
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="phonetoken != null">
        phoneToken = #{phonetoken,jdbcType=VARCHAR},
      </if>
      <if test="phonetype != null">
        phoneType = #{phonetype,jdbcType=VARCHAR},
      </if>
      <if test="systemname != null">
        systemName = #{systemname,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="versionname != null">
        versionName = #{versionname,jdbcType=VARCHAR},
      </if>
      <if test="versionno != null">
        versionNo = #{versionno,jdbcType=VARCHAR},
      </if>
      <if test="usetime != null">
        useTime = #{usetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where phone_version_id = #{phoneVersionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.soco.car.user.entity.PhoneVersion">
    update ts01_phone_version
    set userId = #{userid,jdbcType=BIGINT},
      phoneToken = #{phonetoken,jdbcType=VARCHAR},
      phoneType = #{phonetype,jdbcType=VARCHAR},
      systemName = #{systemname,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      versionName = #{versionname,jdbcType=VARCHAR},
      versionNo = #{versionno,jdbcType=VARCHAR},
      useTime = #{usetime,jdbcType=TIMESTAMP},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where phone_version_id = #{phoneVersionId,jdbcType=BIGINT}
  </update>
</mapper>