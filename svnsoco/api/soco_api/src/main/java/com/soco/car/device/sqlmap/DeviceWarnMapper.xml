<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soco.car.device.dao.DeviceWarnMapper">
  <resultMap id="BaseResultMap" type="com.soco.car.device.entity.DeviceWarn">
    <id column="warnId" jdbcType="BIGINT" property="warnId" />
    <result column="userId" jdbcType="BIGINT" property="userId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="deviceNo" jdbcType="VARCHAR" property="deviceNo" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="retry" jdbcType="INTEGER" property="retry" />
    <result column="pushStatus" jdbcType="INTEGER" property="pushStatus" />
    <result column="delFlag" jdbcType="INTEGER" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    warnId, userId, content, deviceNo, createTime, updateTime, retry, pushStatus, delFlag
  </sql>
  <select id="selectByExample" parameterType="com.soco.car.device.entity.DeviceWarnExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ts01_device_warn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts01_device_warn
    where warnId = #{warnId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ts01_device_warn
    where warnId = #{warnId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.soco.car.device.entity.DeviceWarnExample">
    delete from ts01_device_warn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.soco.car.device.entity.DeviceWarn">
    <selectKey keyProperty="warnId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ts01_device_warn (userId, content, deviceNo, 
      createTime, updateTime, retry, 
      pushStatus, delFlag)
    values (#{userId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{deviceNo,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{retry,jdbcType=INTEGER}, 
      #{pushStatus,jdbcType=INTEGER}, #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.soco.car.device.entity.DeviceWarn">
    <selectKey keyProperty="warnId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ts01_device_warn
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        userId,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="deviceNo != null">
        deviceNo,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="retry != null">
        retry,
      </if>
      <if test="pushStatus != null">
        pushStatus,
      </if>
      <if test="delFlag != null">
        delFlag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="deviceNo != null">
        #{deviceNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="retry != null">
        #{retry,jdbcType=INTEGER},
      </if>
      <if test="pushStatus != null">
        #{pushStatus,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.soco.car.device.entity.DeviceWarnExample" resultType="java.lang.Long">
    select count(*) from ts01_device_warn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ts01_device_warn
    <set>
      <if test="record.warnId != null">
        warnId = #{record.warnId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceNo != null">
        deviceNo = #{record.deviceNo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.retry != null">
        retry = #{record.retry,jdbcType=INTEGER},
      </if>
      <if test="record.pushStatus != null">
        pushStatus = #{record.pushStatus,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null">
        delFlag = #{record.delFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ts01_device_warn
    set warnId = #{record.warnId,jdbcType=BIGINT},
      userId = #{record.userId,jdbcType=BIGINT},
      content = #{record.content,jdbcType=VARCHAR},
      deviceNo = #{record.deviceNo,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      retry = #{record.retry,jdbcType=INTEGER},
      pushStatus = #{record.pushStatus,jdbcType=INTEGER},
      delFlag = #{record.delFlag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.soco.car.device.entity.DeviceWarn">
    update ts01_device_warn
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="deviceNo != null">
        deviceNo = #{deviceNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="retry != null">
        retry = #{retry,jdbcType=INTEGER},
      </if>
      <if test="pushStatus != null">
        pushStatus = #{pushStatus,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        delFlag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where warnId = #{warnId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.soco.car.device.entity.DeviceWarn">
    update ts01_device_warn
    set userId = #{userId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      deviceNo = #{deviceNo,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      retry = #{retry,jdbcType=INTEGER},
      pushStatus = #{pushStatus,jdbcType=INTEGER},
      delFlag = #{delFlag,jdbcType=INTEGER}
    where warnId = #{warnId,jdbcType=BIGINT}
  </update>
</mapper>